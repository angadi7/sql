<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>User Registration</title>
<style>
  /* Basic styling for demonstration */
  body {
    font-family: Arial, sans-serif;
    padding: 20px;
  }
  form {
    max-width: 400px;
    margin: 0 auto;
  }
</style>
</head>
<body>
  <h2>User Registration</h2>
  <form id="registrationForm" action="#" method="post" onsubmit="handleRegistration(event)">
    <label for="username">Username:</label><br>
    <input type="text" id="username" name="username" required><br><br>

    <label for="email">Email:</label><br>
    <input type="email" id="email" name="email" required><br><br>

    <label for="password">Password:</label><br>
    <input type="password" id="password" name="password" required><br><br>

    <button type="submit">Register</button>
  </form>

  <p id="registrationSuccess" style="display: none; color: green;">Registration successful!</p>

  <script>
    function handleRegistration(event) {
      event.preventDefault(); // Prevent form submission
      document.getElementById("registrationForm").reset(); // Reset form fields
      document.getElementById("registrationSuccess").style.display = "block"; // Show success message
    }
  </script>
</body>
</html>



-----------------------------------------------------------------------------------------------------------


<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>User Login</title>
<style>
  /* Basic styling for demonstration */
  body {
    font-family: Arial, sans-serif;
    padding: 20px;
  }
  form {
    max-width: 400px;
    margin: 0 auto;
  }
</style>
</head>
<body>
  <h2>User Login</h2>
  <form id="loginForm" action="#" method="post" onsubmit="handleLogin(event)">
    <label for="loginUsername">Username or Email:</label><br>
    <input type="text" id="loginUsername" name="loginUsername" required><br><br>

    <label for="loginPassword">Password:</label><br>
    <input type="password" id="loginPassword" name="loginPassword" required><br><br>

    <button type="submit">Login</button>
  </form>

  <p id="loginSuccess" style="display: none; color: green;">Login successful!</p>

  <script>
    function handleLogin(event) {
      event.preventDefault(); // Prevent form submission
      document.getElementById("loginForm").reset(); // Reset form fields
      document.getElementById("loginSuccess").style.display = "block"; // Show success message
    }
  </script>
</body>
</html>




--------------------------------------------------------------------------------------------------------
csss


/* Global styles */
body {
  font-family: 'Arial', sans-serif;
  background-color: #f0f0f0;
  margin: 0;
  padding: 20px;
}

.container {
  max-width: 400px;
  margin: 0 auto;
  background-color: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
  color: #333;
}

form {
  display: flex;
  flex-direction: column;
}

label {
  margin-bottom: 8px;
  color: #555;
}

input[type="text"],
input[type="email"],
input[type="password"] {
  padding: 10px;
  margin-bottom: 15px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 16px;
}

button[type="submit"] {
  background-color: #4CAF50;
  color: white;
  border: none;
  padding: 12px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 4px;
  cursor: pointer;
}

button[type="submit"]:hover {
  background-color: #45a049;
}

.success-message {
  text-align: center;
  margin-top: 20px;
  color: #4CAF50;
}



------------------------------------------------------------------------------------------



// Function to validate registration form
function validateRegistrationForm() {
  let username = document.getElementById('username').value.trim();
  let email = document.getElementById('email').value.trim();
  let password = document.getElementById('password').value.trim();

  let isValid = true;

  // Validate username
  if (username === '') {
    isValid = false;
    setErrorFor('username', 'Username cannot be blank');
  } else {
    setSuccessFor('username');
  }

  // Validate email
  if (email === '') {
    isValid = false;
    setErrorFor('email', 'Email cannot be blank');
  } else if (!isEmailValid(email)) {
    isValid = false;
    setErrorFor('email', 'Email is not valid');
  } else {
    setSuccessFor('email');
  }

  // Validate password
  if (password === '') {
    isValid = false;
    setErrorFor('password', 'Password cannot be blank');
  } else {
    setSuccessFor('password');
  }

  return isValid;
}

// Function to validate login form
function validateLoginForm() {
  let loginUsername = document.getElementById('loginUsername').value.trim();
  let loginPassword = document.getElementById('loginPassword').value.trim();

  let isValid = true;

  // Validate username or email
  if (loginUsername === '') {
    isValid = false;
    setErrorFor('loginUsername', 'Username or Email cannot be blank');
  } else {
    setSuccessFor('loginUsername');
  }

  // Validate password
  if (loginPassword === '') {
    isValid = false;
    setErrorFor('loginPassword', 'Password cannot be blank');
  } else {
    setSuccessFor('loginPassword');
  }

  return isValid;
}

// Helper function to set error message for an input field
function setErrorFor(inputId, message) {
  let inputElement = document.getElementById(inputId);
  let formControl = inputElement.parentElement;
  let errorMessage = formControl.querySelector('small');

  formControl.className = 'form-control error';
  errorMessage.innerText = message;
}

// Helper function to set success style for an input field
function setSuccessFor(inputId) {
  let inputElement = document.getElementById(inputId);
  let formControl = inputElement.parentElement;
  formControl.className = 'form-control success';
}

// Helper function to check if an email is valid
function isEmailValid(email) {
  // Basic email validation regex (you can improve this as per your requirements)
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

// Event listeners for form submission
document.getElementById('registrationForm').addEventListener('submit', function(event) {
  if (!validateRegistrationForm()) {
    event.preventDefault(); // Prevent form submission if validation fails
  } else {
    // Clear success message if validation passes
    document.getElementById('registrationSuccess').style.display = 'none';
  }
});

document.getElementById('loginForm').addEventListener('submit', function(event) {
  if (!validateLoginForm()) {
    event.preventDefault(); // Prevent form submission if validation fails
  } else {
    // Clear success message if validation passes
    document.getElementById('loginSuccess').style.display = 'none';
  }
});


